{"version":3,"sources":["../../src/components/popup/index.jsx"],"names":["propTypes","visible","bool","isRequired","onConfirm","func","onCancel","Popup","props","refs","confirmButton","onclick","e","stopPropagation","handleConfirm","cancelButton","handleCancel","isZh","navigator","language","toLowerCase","text1","text2","bind","children","Component"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;AAEA,IAAMA,YAAY;AAChBC,WAAS,oBAAUC,IAAV,CAAeC,UADR;AAEhBC,aAAW,oBAAUC,IAAV,CAAeF,UAFV;AAGhBG,YAAU,oBAAUD,IAAV,CAAeF;AAHT,CAAlB;;IAMMI,K;;;AACJ,mBAAc;AAAA;;AAAA;AAEb;;;;mCAEe;AACd,UAAI,KAAKC,KAAL,CAAWF,QAAf,EAAyB;AACvB,aAAKE,KAAL,CAAWF,QAAX;AACD;AACF;;;oCAEe;AACd,UAAI,KAAKE,KAAL,CAAWJ,SAAf,EAA0B;AACxB,aAAKI,KAAL,CAAWJ,SAAX;AACD;AACF;;AAED;;;;;;;;yCAKsB;AAAA;;AACpB,UAAI,KAAKK,IAAL,CAAUC,aAAV,IACF,CAAC,KAAKD,IAAL,CAAUC,aAAV,CAAwBC,OAD3B,EACoC;;AAElC,aAAKF,IAAL,CAAUC,aAAV,CAAwBC,OAAxB,GAAkC,UAACC,CAAD,EAAO;AACvCA,YAAEC,eAAF;AACA,iBAAKC,aAAL;AACD,SAHD;AAIA,aAAKL,IAAL,CAAUM,YAAV,CAAuBJ,OAAvB,GAAgC,UAACC,CAAD,EAAO;AACrCA,YAAEC,eAAF;AACA,iBAAKG,YAAL;AACD,SAHD;AAID;AACF;;;6BAES;AACR,UAAMC,OAAO,CAACC,UAAUC,QAAX,IACCD,UAAUC,QAAV,CAAmBC,WAAnB,OAAqC,OADtC,IAECF,UAAUC,QAAV,CAAmBC,WAAnB,OAAqC,IAFnD;AAGA,UAAIC,QAAQ,CAACJ,IAAD,GAAQ,QAAR,GAAmB,IAA/B;AACA,UAAIK,QAAQ,CAACL,IAAD,GAAQ,QAAR,GAAmB,IAA/B;AACA,aACE;AAAA;AAAA;AACE,oBAAU,KAAKD,YAAL,CAAkBO,IAAlB,CAAuB,IAAvB,CADZ;AAEE,mBAAS,KAAKf,KAAL,CAAWP,OAFtB;AAGI;AAAA;AAAA,YAAK,WAAU,gBAAf;AACE;AAAA;AAAA,cAAM,KAAI,cAAV;AAA0BoB;AAA1B,WADF;AAEE;AAAA;AAAA,cAAM,KAAI,eAAV;AAA2BC;AAA3B;AAFF,SAHJ;AAOI;AAAA;AAAA,YAAK,WAAU,kBAAf;AACG,eAAKd,KAAL,CAAWgB;AADd;AAPJ,OADF;AAaD;;;;EAxDiB,gBAAMC,S;;AA2D1BlB,MAAMP,SAAN,GAAkBA,SAAlB;;kBAEeO,K","file":"index.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport BaseModal from '../modal/BaseModal';\n\nconst propTypes = {\n  visible: PropTypes.bool.isRequired,\n  onConfirm: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired,\n};\n\nclass Popup extends React.Component {\n  constructor() {\n    super();\n  }\n\n  handleCancel () {\n    if (this.props.onCancel) {\n      this.props.onCancel();\n    }\n  }\n\n  handleConfirm() {\n    if (this.props.onConfirm) {\n      this.props.onConfirm();\n    }\n  }\n\n  /**\n   * 使用原生事件替代react事件\n   * 当BaseModal modal使用原生事件来阻止冒泡时\n   * 完成与取消按钮的react onClick会失效，所以使用原生事件而不使用react事件\n   */\n  componentDidUpdate () {\n    if (this.refs.confirmButton && \n      !this.refs.confirmButton.onclick) {\n\n      this.refs.confirmButton.onclick = (e) => {\n        e.stopPropagation();\n        this.handleConfirm();\n      }\n      this.refs.cancelButton.onclick =(e) => {\n        e.stopPropagation();\n        this.handleCancel();\n      }\n    }\n  }\n\n  render () {\n    const isZh = !navigator.language || \n                  navigator.language.toLowerCase() === 'zh-cn' || \n                  navigator.language.toLowerCase() === 'zh';\n    let text1 = !isZh ? 'Cancel' : '取消';\n    let text2 = !isZh ? 'Finish' : '完成';\n    return (\n      <BaseModal\n        onCancel={this.handleCancel.bind(this)}\n        visible={this.props.visible}>\n          <div className=\"ui-popup-title\">\n            <span ref=\"cancelButton\">{text1}</span>\n            <span ref=\"confirmButton\">{text2}</span>\n          </div>\n          <div className=\"ui-popup-content\">\n            {this.props.children}\n          </div>\n      </BaseModal>\n    )\n  }\n}\n\nPopup.propTypes = propTypes;\n\nexport default Popup;\n"]}